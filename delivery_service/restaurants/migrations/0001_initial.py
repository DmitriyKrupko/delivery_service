# Generated by Django 5.1.5 on 2025-04-13 17:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название категории')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название ресторана')),
                ('description', models.TextField(verbose_name='Описание ресторана')),
                ('address', models.CharField(max_length=200, verbose_name='Адрес ресторана')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон ресторана')),
                ('delivery_radius', models.PositiveIntegerField(default=5, verbose_name='Радиус доставки (км)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('cuisine_type', models.CharField(blank=True, max_length=100, verbose_name='Тип кухни')),
                ('rating', models.FloatField(blank=True, null=True, verbose_name='Рейтинг')),
                ('reviews_count', models.PositiveIntegerField(default=0, verbose_name='Количество отзывов')),
                ('delivery_time', models.PositiveIntegerField(blank=True, null=True, verbose_name='Время доставки (мин)')),
                ('min_order', models.DecimalField(decimal_places=2, default=15, max_digits=6, verbose_name='Минимальный заказ')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='restaurants/logos/', verbose_name='Логотип')),
            ],
            options={
                'verbose_name': 'Ресторан',
                'verbose_name_plural': 'Рестораны',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Аватар')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена')),
                ('dish_type', models.CharField(choices=[('burger', 'Бургер'), ('snack', 'Закуска'), ('drink', 'Напиток'), ('salad', 'Салат'), ('dessert', 'Десерт')], default='burger', max_length=20, verbose_name='Тип блюда')),
                ('image', models.ImageField(blank=True, null=True, upload_to='dishes/', verbose_name='Изображение')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступно')),
                ('cooking_time', models.PositiveIntegerField(default=15, verbose_name='Время приготовления (мин)')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dishes', to='restaurants.category', verbose_name='Категория')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dishes', to='restaurants.restaurant', verbose_name='Ресторан')),
            ],
            options={
                'verbose_name': 'Блюдо',
                'verbose_name_plural': 'Блюда',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('confirmed', 'Подтвержден'), ('preparing', 'Готовится'), ('ready', 'Готов к выдаче'), ('delivering', 'В пути'), ('completed', 'Завершен'), ('canceled', 'Отменен')], default='new', max_length=20, verbose_name='Статус')),
                ('payment_method', models.CharField(choices=[('cash', 'Наличные'), ('card', 'Карта онлайн'), ('terminal', 'Карта курьеру')], default='cash', max_length=20, verbose_name='Способ оплаты')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Итоговая сумма')),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Стоимость доставки')),
                ('comments', models.TextField(blank=True, verbose_name='Комментарии')),
                ('estimated_delivery', models.DateTimeField(blank=True, null=True, verbose_name='Примерное время доставки')),
                ('actual_delivery', models.DateTimeField(blank=True, null=True, verbose_name='Фактическое время доставки')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='restaurants.restaurant', verbose_name='Ресторан')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Цена на момент заказа')),
                ('special_requests', models.TextField(blank=True, verbose_name='Особые пожелания')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='restaurants.dish', verbose_name='Блюдо')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='restaurants.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Элемент заказа',
                'verbose_name_plural': 'Элементы заказа',
            },
        ),
        migrations.AddField(
            model_name='category',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='restaurants.restaurant', verbose_name='Ресторан'),
        ),
        migrations.CreateModel(
            name='RestaurantHighlight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='highlights', to='restaurants.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('street', models.CharField(max_length=100, verbose_name='Улица')),
                ('house', models.CharField(max_length=10, verbose_name='Дом')),
                ('apartment', models.CharField(blank=True, max_length=10, verbose_name='Квартира')),
                ('entrance', models.CharField(blank=True, max_length=5, verbose_name='Подъезд')),
                ('floor', models.CharField(blank=True, max_length=5, verbose_name='Этаж')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Основной адрес')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Адрес доставки',
                'verbose_name_plural': 'Адреса доставки',
                'ordering': ['-is_primary', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='delivery_address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='restaurants.useraddress', verbose_name='Адрес доставки'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('special_requests', models.TextField(blank=True, verbose_name='Особые пожелания')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='restaurants.cart', verbose_name='Корзина')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='restaurants.dish', verbose_name='Блюдо')),
            ],
            options={
                'verbose_name': 'Элемент корзины',
                'verbose_name_plural': 'Элементы корзины',
                'unique_together': {('cart', 'dish')},
            },
        ),
        migrations.AddIndex(
            model_name='dish',
            index=models.Index(fields=['name'], name='restaurants_name_30ed46_idx'),
        ),
        migrations.AddIndex(
            model_name='dish',
            index=models.Index(fields=['restaurant'], name='restaurants_restaur_df035b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('name', 'restaurant')},
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='restaurants_status_f15acc_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['created_at'], name='restaurants_created_111c94_idx'),
        ),
    ]
